% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduceTo.R
\name{reduceTo}
\alias{reduceTo}
\title{Find Optimal Short-Form Scales}
\usage{
reduceTo(
  data,
  n.items,
  n.sets = 5,
  item.names = FALSE,
  r.sq = FALSE,
  generate = FALSE,
  item.set = 1,
  na.rm = TRUE,
  targ = NULL
)
}
\arguments{
\item{data}{A numeric matrix or data.frame containing the item responses.}

\item{n.items}{The desired number of items in the final short-form scale.}

\item{n.sets}{The number of top-performing item sets to return. Defaults to 5.}

\item{item.names}{Logical. If TRUE, the output will list the item names instead
of their column numbers in the supplied matrix. Defaults to FALSE.}

\item{r.sq}{Logical. If TRUE, the squared correlation (R-squared) is returned
alongside the correlation. Defaults to FALSE.}

\item{generate}{Logical. If TRUE, the function returns the computed scores for
the single best item set instead of the correlation list. Defaults to FALSE.}

\item{item.set}{An integer specifying which item set to generate scores for
(e.g., 1 for the best set, 2 for the second-best). Only used if `generate = TRUE`.}

\item{na.rm}{Logical. If TRUE, missing values are handled by pairwise deletion
or row-wise removal in means. Defaults to TRUE.}

\item{targ}{An optional numeric vector to serve as the target criterion for the
correlations. If NULL (the default), the mean score of the full scale is used.}
}
\value{
Depending on the arguments, either a data.frame listing the top `n.sets`
  of items and their correlation with the target, or a numeric vector of scores
  generated from the `item.set`.
}
\description{
This function systematically evaluates all possible subsets of a given number of items
from a larger scale to find the combination that correlates most highly with a
target criterion (by default, the total score of the full scale). It includes
an initial step to automatically reverse-code items as needed based on their
correlation with the most central item.
}
\examples{
library(MASS)
set.seed(42) # For reproducibility
# 1. Define your desired factor loadings.
loadings <- c(rnorm(7,0.75,0.08),rnorm(3,-0.75,0.08))

# 2. Create the target correlation matrix from the loadings.
target_cor_matrix <- outer(loadings, loadings)
diag(target_cor_matrix) <- 1

# 3. Generate data from that correlation structure.
simulated_data <- mvrnorm(n = 200,mu = rep(0, 10),Sigma = target_cor_matrix,empirical = TRUE)

# 4. Finalize the data frame and add names.
simulated_data <- as.data.frame(simulated_data)
colnames(simulated_data) <- paste0("item_", 1:10)

# 5. Reduce the scale to 3 items.
reduceTo(simulated_data,3)

}
\author{
Paddy Maher, Goldsmiths, University of London. Contact: paddycarstenmaher@gmail.com
}
